name: Deploy CI Denwa

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: ['20.x']
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no root@79.174.80.17 'bash -s' < deploy_script.sh
      - name: SSH into VPS and update code
        uses: appleboy/ssh-action@master
        with:
          port: ${{ secrets.SSH_PORT }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          script_stop: true
          script: |
            set -e

            if [ ! -d "/opt/app/http-server" ]; then
            git clone git@github.com:Project-DENWA/http-server.git /opt/app/http-server
            fi

            cd /opt/app/http-server

            git fetch origin main
            git reset --hard origin/main

            echo "${{ secrets.PRODUCTION_ENV_CONTENTS }}" > /opt/app/http-server/.production.env

            docker compose --env-file .production.env down
            docker compose --env-file .production.env pull

            docker system prune -af

            docker compose --env-file .production.env up -d --build

            docker ps -a
